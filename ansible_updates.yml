# ansible playbook for updating Linux servers
# mangobanaani 2017
# MIT License

- hosts: testing
  become: yes
  gather_facts: True
  vars:
    motd_warning: "Dont be irreplaceable; if you cant be replaced, you cannot be promoted"
  tasks:
  - name: setup a MOTD
    copy: dest=/etc/motd content={{ motd_warning }}

  - name: yum update
    become: yes
    yum: name=* state=latest
    when: ansible_os_family=="RedHar"

  - name : apt update & upgrade
    become: yes
    apt:
      upgrade: dist
      update-cache: yes
    when: ansible_os_family == "Debian"

  - name: brew update
    become: no
    shell: brew update
    when: ansible_os_family == 'Darwin'

  - name : Unexpected OS family
    debug: msg="OS Family {{ ansible_os_family }} is not supported"
    when: not ansible_os_family != "RedHat" or ansible_os_family != "Debian"

  - name: apt check autoremove
    command: apt-get --dry-run autoremove
    register: check_autoremove
    changed_when: False
    when: ansible_os_family == "Debian"

  - name: apt do autoremove
    command: apt-get -y autoremove
    when: ansible_os_family == "Debian" and "'packages will be REMOVED' in check_autoremove.stdout"

  - name : yum old kernels prereq
    become: yes
    yum:
      name=yum-tools
      state=latest
    when: ansible_os_family == "RedHat"

  - name: yum clean old kernels
    become: yes
    shell: package-cleanup --oldkernels --count=3
    when: ansible_os_family == "RedHat"

  - name: apt clean
    become: yes
    shell: apt-get clean
    when: ansible_os_family == "Debian"

  - name: yum clean
    become: yes
    shell: yum clean all
    when: ansible_os_family == "RedHat"

  - name: check if reboot needed
    stat: path=/var/run/reboot-required get_md5=no
    register: sym

  - name: reboot
    shell: shutdown -r now "reboot triggered by Ansible"
    async: 0
    poll: 0
    ignore_errors: true
    when: sym.stat.exists is defined and sym.stat.exists

  - name: wait server comes back online
    local_action: wait_for
      host={{ inventory_hostname }}
      state=started
      port=22
      delay=1
      timeout=300
    when: sym.stat.exists is defined and sym.stat.exists
    sudo: false
